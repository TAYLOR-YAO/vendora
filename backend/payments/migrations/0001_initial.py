# Generated by Django 5.0.7 on 2025-10-05 21:32

import django.db.models.deletion
import django.utils.timezone
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('commerce', '0001_initial'),
        ('crm', '0001_initial'),
        ('platformapp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='GatewayAccount',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('kind', models.CharField(max_length=20)),
                ('config', models.JSONField(default=dict)),
                ('display_name', models.CharField(blank=True, max_length=100, null=True)),
                ('active', models.BooleanField(default=True)),
                ('default_currency', models.CharField(default='XOF', max_length=3)),
                ('supported_methods', models.JSONField(blank=True, default=list)),
                ('region', models.CharField(blank=True, max_length=50, null=True)),
                ('webhook_secret', models.CharField(blank=True, max_length=200, null=True)),
                ('payout_schedule', models.JSONField(blank=True, default=dict)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gateway_accounts', to='platformapp.tenant')),
            ],
        ),
        migrations.CreateModel(
            name='InstallmentPlan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=18)),
                ('currency', models.CharField(default='XOF', max_length=3)),
                ('schedule', models.JSONField(blank=True, default=list)),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('canceled', 'Canceled'), ('defaulted', 'Defaulted')], default='active', max_length=20)),
                ('meta_json', models.JSONField(blank=True, default=dict)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='installment_plans', to='commerce.order')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='installment_plans', to='platformapp.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=18)),
                ('currency', models.CharField(default='XOF', max_length=3)),
                ('status', models.CharField(choices=[('initiated', 'Initiated'), ('requires_action', 'Requires Action'), ('processing', 'Processing'), ('succeeded', 'Succeeded'), ('failed', 'Failed'), ('canceled', 'Canceled'), ('refunded', 'Refunded'), ('partially_refunded', 'Partially Refunded')], default='initiated', max_length=20)),
                ('provider', models.CharField(default='card', max_length=40)),
                ('provider_ref', models.CharField(blank=True, max_length=120, null=True)),
                ('provider_intent_id', models.CharField(blank=True, max_length=120, null=True)),
                ('method', models.CharField(default='card', max_length=40)),
                ('flow', models.CharField(default='server_confirm', max_length=40)),
                ('refunded_amount', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=18)),
                ('failure_code', models.CharField(blank=True, max_length=64, null=True)),
                ('failure_message', models.TextField(blank=True, null=True)),
                ('captured_at', models.DateTimeField(blank=True, null=True)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('meta_json', models.JSONField(blank=True, default=dict)),
                ('client_secret', models.CharField(blank=True, max_length=200, null=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='commerce.order')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='platformapp.tenant')),
            ],
        ),
        migrations.CreateModel(
            name='Payout',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=18)),
                ('currency', models.CharField(default='XOF', max_length=3)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('paid', 'Paid'), ('failed', 'Failed'), ('canceled', 'Canceled')], default='pending', max_length=20)),
                ('destination', models.CharField(blank=True, max_length=120, null=True)),
                ('meta_json', models.JSONField(blank=True, default=dict)),
                ('gateway_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payouts', to='payments.gatewayaccount')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payouts', to='platformapp.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProviderEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('provider', models.CharField(max_length=40)),
                ('event_type', models.CharField(max_length=80)),
                ('payload', models.JSONField(blank=True, default=dict)),
                ('signature', models.CharField(blank=True, max_length=200, null=True)),
                ('gateway_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='payments.gatewayaccount')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='provider_events', to='platformapp.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Refund',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=18)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('succeeded', 'Succeeded'), ('failed', 'Failed'), ('canceled', 'Canceled')], default='pending', max_length=20)),
                ('reason', models.CharField(blank=True, max_length=60, null=True)),
                ('provider_ref', models.CharField(blank=True, max_length=120, null=True)),
                ('meta_json', models.JSONField(blank=True, default=dict)),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='refunds', to='payments.payment')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='refunds', to='platformapp.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('plan_code', models.CharField(max_length=64)),
                ('status', models.CharField(choices=[('trial', 'Trial'), ('active', 'Active'), ('past_due', 'Past Due'), ('canceled', 'Canceled')], default='active', max_length=20)),
                ('current_period_start', models.DateTimeField(default=django.utils.timezone.now)),
                ('current_period_end', models.DateTimeField(blank=True, null=True)),
                ('cancel_at', models.DateTimeField(blank=True, null=True)),
                ('currency', models.CharField(default='XOF', max_length=3)),
                ('amount', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=18)),
                ('meta_json', models.JSONField(blank=True, default=dict)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.customer')),
                ('gateway_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='payments.gatewayaccount')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='platformapp.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddIndex(
            model_name='gatewayaccount',
            index=models.Index(fields=['tenant', 'kind', 'active'], name='payments_ga_tenant__7e7c7d_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['tenant', 'order', 'status'], name='payments_pa_tenant__49c251_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['tenant', 'provider', 'provider_ref'], name='payments_pa_tenant__5905b6_idx'),
        ),
    ]
