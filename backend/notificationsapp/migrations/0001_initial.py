# Generated by Django 5.0.7 on 2025-10-05 21:32

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('platformapp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationDispatch',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('to_user_id', models.UUIDField(blank=True, null=True)),
                ('to_address', models.CharField(blank=True, max_length=255, null=True)),
                ('channel', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('push', 'Push'), ('whatsapp', 'WhatsApp'), ('webhook', 'Webhook')], default='email', max_length=16)),
                ('payload_json', models.JSONField(default=dict)),
                ('attachments', models.JSONField(blank=True, default=list)),
                ('schedule_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('queued', 'Queued'), ('sending', 'Sending'), ('sent', 'Sent'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='queued', max_length=16)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('provider_ref', models.CharField(blank=True, max_length=200, null=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notif_dispatches', to='platformapp.tenant')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('provider', models.CharField(max_length=120)),
                ('provider_ref', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.CharField(default='sent', max_length=16)),
                ('meta_json', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('dispatch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='notificationsapp.notificationdispatch')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notif_logs', to='platformapp.tenant')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('template_key', models.CharField(max_length=120)),
                ('locale', models.CharField(default='en', max_length=10)),
                ('channel', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('push', 'Push'), ('whatsapp', 'WhatsApp'), ('webhook', 'Webhook')], default='email', max_length=16)),
                ('subject', models.CharField(blank=True, max_length=255, null=True)),
                ('body', models.TextField(help_text='Jinja/Django template string with {{variables}}')),
                ('version', models.IntegerField(default=1)),
                ('is_active', models.BooleanField(default=True)),
                ('render_hints', models.JSONField(blank=True, default=dict)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notif_templates', to='platformapp.tenant')),
            ],
        ),
        migrations.AddField(
            model_name='notificationdispatch',
            name='template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='notificationsapp.notificationtemplate'),
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('key', models.CharField(max_length=64)),
                ('name', models.CharField(max_length=160)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notif_topics', to='platformapp.tenant')),
            ],
        ),
        migrations.AddField(
            model_name='notificationtemplate',
            name='topic',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='templates', to='notificationsapp.topic'),
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_id', models.UUIDField()),
                ('channel', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('push', 'Push'), ('whatsapp', 'WhatsApp'), ('webhook', 'Webhook')], default='email', max_length=16)),
                ('scope', models.CharField(choices=[('global', 'Global'), ('topic', 'Topic'), ('template', 'Template')], default='global', max_length=16)),
                ('is_enabled', models.BooleanField(default=True)),
                ('quiet_hours_json', models.JSONField(blank=True, null=True)),
                ('digest', models.CharField(choices=[('none', 'None'), ('hourly', 'Hourly'), ('daily', 'Daily'), ('weekly', 'Weekly')], default='none', max_length=16)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notif_prefs', to='platformapp.tenant')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='notificationsapp.notificationtemplate')),
                ('topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='notificationsapp.topic')),
            ],
        ),
        migrations.AddField(
            model_name='notificationdispatch',
            name='topic',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='notificationsapp.topic'),
        ),
        migrations.AddIndex(
            model_name='topic',
            index=models.Index(fields=['tenant', 'key'], name='notificatio_tenant__f8f1ed_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='topic',
            unique_together={('tenant', 'key')},
        ),
        migrations.AddIndex(
            model_name='notificationtemplate',
            index=models.Index(fields=['tenant', 'template_key', 'locale', 'channel'], name='notificatio_tenant__9d2dec_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='notificationtemplate',
            unique_together={('tenant', 'template_key', 'locale', 'channel', 'version')},
        ),
        migrations.AddIndex(
            model_name='notificationpreference',
            index=models.Index(fields=['tenant', 'user_id', 'channel', 'scope'], name='notificatio_tenant__bf577c_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationdispatch',
            index=models.Index(fields=['tenant', 'channel', 'status'], name='notificatio_tenant__660b83_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationdispatch',
            index=models.Index(fields=['tenant', 'created_at'], name='notificatio_tenant__a5938e_idx'),
        ),
    ]
