# Generated by Django 5.0.7 on 2025-10-05 21:32

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('business', '0001_initial'),
        ('commerce', '0001_initial'),
        ('platformapp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(blank=True, max_length=32, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('store', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='warehouses', to='business.store')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='warehouses', to='platformapp.tenant')),
            ],
        ),
        migrations.CreateModel(
            name='StockTransfer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('qty', models.IntegerField()),
                ('status', models.CharField(default='completed', max_length=16)),
                ('note', models.CharField(blank=True, max_length=255, null=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_transfers', to='platformapp.tenant')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_transfers', to='commerce.variant')),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfer_ins', to='inventory.warehouse')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfer_outs', to='inventory.warehouse')),
            ],
        ),
        migrations.CreateModel(
            name='StockReservation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('qty', models.IntegerField()),
                ('status', models.CharField(choices=[('reserved', 'Reserved'), ('consumed', 'Consumed'), ('released', 'Released')], default='reserved', max_length=16)),
                ('order_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='commerce.orderitem')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_reservations', to='platformapp.tenant')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='commerce.variant')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='inventory.warehouse')),
            ],
        ),
        migrations.CreateModel(
            name='StockLedger',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('qty_delta', models.IntegerField()),
                ('reason', models.CharField(choices=[('adjustment', 'Adjustment'), ('transfer_out', 'Transfer Out'), ('transfer_in', 'Transfer In'), ('reserve', 'Reserve'), ('consume', 'Consume'), ('release', 'Release'), ('receive', 'Receive'), ('correction', 'Correction')], default='adjustment', max_length=32)),
                ('order_item_id', models.UUIDField(blank=True, null=True)),
                ('note', models.CharField(blank=True, max_length=255, null=True)),
                ('snapshot_available', models.IntegerField(default=0)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_ledgers', to='platformapp.tenant')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_ledgers', to='commerce.variant')),
                ('warehouse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_ledgers', to='inventory.warehouse')),
            ],
        ),
        migrations.CreateModel(
            name='StockItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('qty_on_hand', models.IntegerField(default=0)),
                ('qty_reserved', models.IntegerField(default=0)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_items', to='platformapp.tenant')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_items', to='commerce.variant')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_items', to='inventory.warehouse')),
            ],
        ),
        migrations.CreateModel(
            name='StockAdjustment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('qty_delta', models.IntegerField()),
                ('reason', models.CharField(default='cycle_count', max_length=64)),
                ('note', models.CharField(blank=True, max_length=255, null=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_adjustments', to='platformapp.tenant')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_adjustments', to='commerce.variant')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_adjustments', to='inventory.warehouse')),
            ],
        ),
        migrations.AddIndex(
            model_name='warehouse',
            index=models.Index(fields=['tenant', 'is_active'], name='inventory_w_tenant__76c9ae_idx'),
        ),
        migrations.AddIndex(
            model_name='warehouse',
            index=models.Index(fields=['tenant', 'name'], name='inventory_w_tenant__fe0ca2_idx'),
        ),
        migrations.AddIndex(
            model_name='stocktransfer',
            index=models.Index(fields=['tenant', '-created_at'], name='inventory_s_tenant__fb7c8c_idx'),
        ),
        migrations.AddIndex(
            model_name='stocktransfer',
            index=models.Index(fields=['tenant', 'status'], name='inventory_s_tenant__19d3ac_idx'),
        ),
        migrations.AddIndex(
            model_name='stockreservation',
            index=models.Index(fields=['tenant', 'variant'], name='inventory_s_tenant__ba123a_idx'),
        ),
        migrations.AddIndex(
            model_name='stockreservation',
            index=models.Index(fields=['tenant', 'warehouse'], name='inventory_s_tenant__04178b_idx'),
        ),
        migrations.AddIndex(
            model_name='stockreservation',
            index=models.Index(fields=['tenant', 'status'], name='inventory_s_tenant__070ee0_idx'),
        ),
        migrations.AddIndex(
            model_name='stockledger',
            index=models.Index(fields=['tenant', 'variant'], name='inventory_s_tenant__310b85_idx'),
        ),
        migrations.AddIndex(
            model_name='stockledger',
            index=models.Index(fields=['tenant', 'warehouse'], name='inventory_s_tenant__3397c4_idx'),
        ),
        migrations.AddIndex(
            model_name='stockledger',
            index=models.Index(fields=['tenant', '-created_at'], name='inventory_s_tenant__efa3e9_idx'),
        ),
        migrations.AddIndex(
            model_name='stockitem',
            index=models.Index(fields=['tenant', 'variant'], name='inventory_s_tenant__f8bae4_idx'),
        ),
        migrations.AddIndex(
            model_name='stockitem',
            index=models.Index(fields=['tenant', 'warehouse'], name='inventory_s_tenant__f351c1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='stockitem',
            unique_together={('tenant', 'warehouse', 'variant')},
        ),
        migrations.AddIndex(
            model_name='stockadjustment',
            index=models.Index(fields=['tenant', '-created_at'], name='inventory_s_tenant__dbb53c_idx'),
        ),
        migrations.AddIndex(
            model_name='stockadjustment',
            index=models.Index(fields=['tenant', 'warehouse'], name='inventory_s_tenant__a335ae_idx'),
        ),
        migrations.AddIndex(
            model_name='stockadjustment',
            index=models.Index(fields=['tenant', 'variant'], name='inventory_s_tenant__653955_idx'),
        ),
    ]
